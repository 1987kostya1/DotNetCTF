 ?? T;
 ?? œ;
 ?? Ö;
InitAppli;
SetModeAppli;
EndAppli;
KillBank;
LockBank;
UnlockBank;
PurgeBank;
Bank_GetEltAddr;
Bank_GetEltCount;
GetDLLVersion;
WinOpenExA;
SCRWinOpenA;
WCDClose;
WinSearch;
WinGetFlags;
WinSetFlags;
WinGetHandle;
WinGetMCHandle;
void __stdcall WinMove(class Win *,int,int);
void __stdcall WinSize(class Win *,int,int);
DefMsgProcA;
WinSetMenu;
WinSetMouse;
WinStartWait;
WinEndWait;
WinGetHDC;
WinGetHDCLog;
WinReleaseHDC;
WinReleaseHDCLog;
WinSetParam;
int __stdcall WinAttachSurface(int,class cSurface *);
void __stdcall WinDetachSurface(int);
class cSurface * __stdcall WinGetSurface(int,int);
WinGrabDesktop;
WinPaper;
WinPen;
WinGraphMode;
WinCreateFont;
WinPasteTextA;
WinFillBr;
WinClip;
WinFillRect;
WinBox;
WinLine;
WinScroll;
WinGetLogRect;
WinRect;
WinResetZones;
WinAddZone;
WinAddCoord;
WinGetZones;
StartFullScreen;
EndFullScreen;
EnumScreenModes;
unsigned long __stdcall KbHookProc(int,unsigned int,long);
StartFilterHook;
StopFilterHook;
SpriteClear;
SpriteDraw;
SpriteUpdate;
ScreenUpdate;
WinEnableUpdate;
RestoreRect;
SaveRect;
KillRect;
DelSprites;
WinSetColMode;
SetSpriteColFlag;
SpriteCol_TestPoint;
SpriteCol_TestSprite;
SpriteCol_TestSprite_All;
SpriteCol_TestRect;
AddSprite;
ModifSprite;
ActiveSprite;
GetSpriteExtra;
ShowSprite;
DelSprite;
DelSpriteFast;
AddOwnerDrawSprite;
ModifOwnerDrawSprite;
ModifSpriteEffect;
GetSpriteFlags;
SetSpriteFlags;
GetSpriteScale;
SetSpriteScale;
GetSpriteAngle;
SetSpriteAngle;
GetSpriteLayer;
SetSpriteLayer;
GetSpriteMask;
GetSpriteRect;
MoveSpriteToBack;
MoveSpriteToFront;
SwapSprites;
MoveSpriteBefore;
MoveSpriteAfter;
IsSpriteBefore;
IsSpriteAfter;
ColMask_Create;
ColMask_CreateEx;
ColMask_Kill;
ColMask_Fill;
ColMask_FillRectangle;
ColMask_OrImage;
ColMask_OrPlatform;
ColMask_TestPoint;
ColMask_TestRect;
ColMask_TestSprite;
ColMask_Scroll;
ColMask_ToLog;
ColMask_SetClip;
ColMask_SetOrigin;
Mask_TestPoint;
Mask_TestRect;
Mask_TestMask;
GetRGB;
SetDefaultPalette256;
GetPaletteAppli;
SetPaletteAppli;
GetOpaqueBlack;
BuildRemapTable;
AddPalette;
DelPalette;
SetAppCSPalette;
NormalizePalette;
csPalette_Create;
csPalette_Delete;
Init_Palettes;
Free_Palettes;
int __stdcall ImportImageA(class CImageFilterMgr *,char const *,class cSurface *,unsigned long *,unsigned long);
int __stdcall ImportImageFromInputFile(class CImageFilterMgr *,class CInputFile *,class cSurface *,unsigned long *,unsigned long);
int __stdcall CanImportImageA(class CImageFilterMgr *,char const *);
int __stdcall ImportPaletteA(class CImageFilterMgr *,char const *,struct tagLOGPALETTE *);
int __stdcall ExportImageA(class CImageFilterMgr *,char const *,class cSurface *,unsigned long);
int __stdcall CanImportAnimationA(class CImageFilterMgr *,char const *,int *);
int __stdcall BeginAnimationImportA(class CImageFilterMgr *,char const *,class cSurface *,class CImageFilter *,unsigned long);
int __stdcall GetNextAnimationFrame(class CImageFilterMgr *,class cSurface *,class CImageFilter *);
void __stdcall EndAnimationImport(class CImageFilterMgr *,class CImageFilter *);
int __stdcall BeginAnimationExportA(class CImageFilterMgr *,char const *,class cSurface *,class CImageFilter *,int,int,int,int);
int __stdcall ExportNextFrame(class CImageFilterMgr *,class cSurface *,class CImageFilter *,int);
void __stdcall EndAnimationExport(class CImageFilterMgr *,class CImageFilter *);
int __stdcall ChoosePictureA(struct tagOFNA *,int,class CImageFilterMgr *,unsigned long *,unsigned long);
unsigned int __stdcall ChoosePictureProc(struct HWND__ *,unsigned int,unsigned int,long);
InitDibHeader;
FillDib;
RemapDib;
GetImageInfos;
IsImageEmpty;
GetImageBits;
StretchImage;
GetNearestIndex;
IncImageCount;
ImageToDib;
DibToImage;
DibToImageEx;
AddImage;
DelImage;
AddMask;
DelMask;
GetImageSize;
PasteSprite;
PasteSpriteEffect;
int __stdcall LockImageSurface(void *,unsigned long,class cSurface &,int);
void __stdcall UnlockImageSurface(class cSurface &);
GetImageMask;
int __stdcall GetSurfacePrototype(class cSurface * *,int,int,int);
class cSurface * __stdcall NewSurface(void);
void __stdcall DeleteSurface(class cSurface *);
AddFontA;
DelFont;
IncFontCount;
GetFontInfosA;
LogFont16To32A;
LogFont32To16A;
CreateFontIndirect16;
GetSoundInfoA;
GetSoundData;
IsSndPlaying;
AddSoundA;
IncSoundCount;
ModifSpriteEx;
public: __thiscall CPTypeArray<class Spr>::CPTypeArray<class Spr>(void);
DelSound;
PlaySndA;
StopSnd;
WaveSetChannels;
FindSndFromNameA;
GetSoundNameA;
PauseSnd;
PauseSndChannel;
ReplaceSoundA;
ResumeSnd;
ResumeSndChannel;
SetSoundFlags;
StopSndChannel;
GetSoundDataPtr;
IsSndChannelPaused;
IsSndChannelPlaying;
IsSndPaused;
void __cdecl GetVirtualDesktopRect(struct tagRECT &);
public: __thiscall CDWArray::CDWArray(void);
public: __thiscall CFillData::CFillData(class CFillData const &);
public: __thiscall CFillData::CFillData(void);
public: __thiscall CFillDir::CFillDir(class CFillDir const &);
public: __thiscall CFillDir::CFillDir(unsigned long,unsigned long,int,int,int);
public: __thiscall CFillFlat::CFillFlat(class CFillFlat const &);
public: __thiscall CFillFlat::CFillFlat(unsigned long);
public: __thiscall CFillMosaic::CFillMosaic(class CFillMosaic const &);
public: __thiscall CFillMosaic::CFillMosaic(class cSurface *,int,int);
protected: __thiscall CFilterImpl::CFilterImpl(void);
public: __thiscall CFilterImpl::CFilterImpl(class CFilterImpl const &);
public: __thiscall CFilterMgr::CFilterMgr(class CFilterMgr const &);
public: __thiscall CFilterMgr::CFilterMgr(void);
public: __thiscall CImageFilter::CImageFilter(class CImageFilterMgr *);
public: __thiscall CImageFilterMgr::CImageFilterMgr(class CImageFilterMgr const &);
public: __thiscall CImageFilterMgr::CImageFilterMgr(void);
public: __thiscall CInputBufFile::CInputBufFile(class CInputBufFile const &);
public: __thiscall CInputBufFile::CInputBufFile(void);
public: __thiscall CInputFile::CInputFile(class CInputFile const &);
public: __thiscall CInputFile::CInputFile(void);
public: __thiscall CInputMemFile::CInputMemFile(class CInputMemFile const &);
public: __thiscall CInputMemFile::CInputMemFile(void);
public: __thiscall COutputFile::COutputFile(class COutputFile const &);
public: __thiscall COutputFile::COutputFile(void);
public: __thiscall COutputMemFile::COutputMemFile(class COutputMemFile const &);
public: __thiscall COutputMemFile::COutputMemFile(void);
public: __thiscall CPArray::CPArray(void);
public: __thiscall CPList::CPList(void);
protected: __thiscall CSound::CSound(class CSoundManager *);
public: __thiscall CSound::CSound(class CSound const &);
public: __thiscall CSoundFilter::CSoundFilter(class CSoundFilter const &);
public: __thiscall CSoundFilter::CSoundFilter(void);
public: __thiscall CSoundFilterMgr::CSoundFilterMgr(class CSoundFilterMgr const &);
public: __thiscall CSoundFilterMgr::CSoundFilterMgr(void);
public: __thiscall CSoundManager::CSoundManager(class CSoundManager const &);
public: __thiscall CSoundManager::CSoundManager(class CSoundAPI *,struct HWND__ *);
public: __thiscall cSurface::cSurface(void);
public: __thiscall CDWArray::~CDWArray(void);
public: virtual __thiscall CFillData::~CFillData(void);
public: virtual __thiscall CFillDir::~CFillDir(void);
public: virtual __thiscall CFillFlat::~CFillFlat(void);
public: virtual __thiscall CFillMosaic::~CFillMosaic(void);
public: virtual __thiscall CFilterImpl::~CFilterImpl(void);
public: virtual __thiscall CFilterMgr::~CFilterMgr(void);
public: __thiscall CImageFilter::~CImageFilter(void);
public: virtual __thiscall CImageFilterMgr::~CImageFilterMgr(void);
public: virtual __thiscall CInputBufFile::~CInputBufFile(void);
public: virtual __thiscall CInputFile::~CInputFile(void);
public: virtual __thiscall CInputMemFile::~CInputMemFile(void);
public: virtual __thiscall COutputBufFile::~COutputBufFile(void);
public: virtual __thiscall COutputFile::~COutputFile(void);
public: virtual __thiscall COutputMemFile::~COutputMemFile(void);
public: __thiscall CPArray::~CPArray(void);
public: __thiscall CPList::~CPList(void);
protected: virtual __thiscall CSound::~CSound(void);
public: virtual __thiscall CSoundFilter::~CSoundFilter(void);
public: virtual __thiscall CSoundFilterMgr::~CSoundFilterMgr(void);
protected: virtual __thiscall CSoundManager::~CSoundManager(void);
public: __thiscall cSurface::~cSurface(void);
public: class CDWArray & __thiscall CDWArray::operator=(class CDWArray const &);
public: class CFillData & __thiscall CFillData::operator=(class CFillData const &);
public: class CFillDir & __thiscall CFillDir::operator=(class CFillDir const &);
public: class CFillFlat & __thiscall CFillFlat::operator=(class CFillFlat const &);
public: class CFillMosaic & __thiscall CFillMosaic::operator=(class CFillMosaic const &);
public: class CFilterImpl & __thiscall CFilterImpl::operator=(class CFilterImpl const &);
public: class CFilterMgr & __thiscall CFilterMgr::operator=(class CFilterMgr const &);
public: class CImageFilter & __thiscall CImageFilter::operator=(class CImageFilter const &);
public: class CImageFilterMgr & __thiscall CImageFilterMgr::operator=(class CImageFilterMgr const &);
public: class CInputBufFile & __thiscall CInputBufFile::operator=(class CInputBufFile const &);
public: class CInputFile & __thiscall CInputFile::operator=(class CInputFile const &);
public: class CInputMemFile & __thiscall CInputMemFile::operator=(class CInputMemFile const &);
public: class COutputBufFile & __thiscall COutputBufFile::operator=(class COutputBufFile const &);
public: class COutputFile & __thiscall COutputFile::operator=(class COutputFile const &);
public: class COutputMemFile & __thiscall COutputMemFile::operator=(class COutputMemFile const &);
public: class CPArray & __thiscall CPArray::operator=(class CPArray const &);
public: class CPList & __thiscall CPList::operator=(class CPList const &);
public: class CSound & __thiscall CSound::operator=(class CSound const &);
public: class CSoundFilter & __thiscall CSoundFilter::operator=(class CSoundFilter const &);
public: class CSoundFilterMgr & __thiscall CSoundFilterMgr::operator=(class CSoundFilterMgr const &);
public: class CSoundManager & __thiscall CSoundManager::operator=(class CSoundManager const &);
public: class cSurface & __thiscall cSurface::operator=(class cSurface const &);
const CFillData::`vftable';
const CFillDir::`vftable';
const CFillFlat::`vftable';
const CFillMosaic::`vftable';
const CFilterImpl::`vftable';
const CFilterMgr::`vftable';
const CImageFilterMgr::`vftable';
const CInputBufFile::`vftable';
const CInputFile::`vftable';
const CInputMemFile::`vftable';
const COutputBufFile::`vftable';
const COutputFile::`vftable';
const COutputMemFile::`vftable';
const CSound::`vftable';
const CSoundFilter::`vftable';
const CSoundFilterMgr::`vftable';
const CSoundManager::`vftable';
public: void * __thiscall CPArray::operator[](int);
void __stdcall _notused(void);
public: int __thiscall CDWArray::Add(unsigned long);
public: int __thiscall CPArray::Add(void *);
public: void * __thiscall CPList::AddHead(void *);
public: virtual void __thiscall CFilterImpl::AddPreviousFrameDuration(class COutputFile *,int);
public: void __thiscall CImageFilter::AddPreviousFrameDuration(int);
public: void * __thiscall CPList::AddTail(void *);
protected: int __thiscall CFilterImpl::AllocatePalette(unsigned int);
protected: int __thiscall CPList::AllocNewNode(void);
protected: int __thiscall CInputBufFile::Attach(void *,unsigned long,unsigned long);
public: virtual int __thiscall CInputBufFile::Attach(void *);
public: virtual int __thiscall CInputMemFile::Attach(void *);
public: void __thiscall cSurface::AttachAlpha(unsigned char *,int);
public: void __thiscall cSurface::AttachWindow(struct HWND__ *);
public: int __thiscall cSurface::BeginRendering(int,unsigned long);
public: int __thiscall cSurface::Blit(class cSurface &)const ;
public: int __thiscall cSurface::Blit(class cSurface &,int,int,int,int,int,int,enum BlitMode,enum BlitOp,long,unsigned long)const ;
public: int __thiscall cSurface::Blit(class cSurface &,int,int,enum BlitMode,enum BlitOp,long,unsigned long)const ;
protected: static void __cdecl cSurface::BuildSysColorTable(void);
public: virtual int __thiscall CFilterMgr::CanReadFile(int,class CInputFile *);
public: virtual int __thiscall CFilterImpl::CanSave(void);
public: int __thiscall CImageFilter::CanSave(void);
public: virtual int __thiscall CFilterImpl::CanSaveAnim(void);
public: int __thiscall CImageFilter::CanSaveAnim(void);
public: static int __cdecl cSurface::CaptureDC(struct HDC__ *,struct HDC__ *,long,long,long,long,long,long,long,long,int,int);
public: unsigned long __thiscall CDWArray::CheckAt(int);
public: void * __thiscall CPArray::CheckAt(int);
public: void __thiscall cSurface::ClearClipRect(void);
public: void __thiscall cSurface::Clone(class cSurface const &,int,int);
public: void __thiscall CImageFilter::Close(void);
protected: void __thiscall CFilterImpl::ComputeWidthBytes(void);
public: virtual int __thiscall CFilterImpl::ContainsAlphaChannel(void);
public: int __thiscall CImageFilter::ContainsAlphaChannel(void);
protected: void __thiscall CFilterImpl::ConvertLine(unsigned char *,unsigned char *,int);
public: void __thiscall cSurface::CopyScreenModeInfo(class cSurface *);
public: int __thiscall CInputBufFile::Create(int);
public: int __thiscall CInputBufFile::Create(int,unsigned long,unsigned long);
public: int __thiscall CInputBufFile::Create(char const *);
public: int __thiscall CInputBufFile::Create(char const *,unsigned long,unsigned long);
public: int __thiscall CInputMemFile::Create(unsigned char *,unsigned long);
public: int __thiscall COutputBufFile::Create(int,unsigned int);
public: int __thiscall COutputBufFile::Create(char const *,unsigned int);
public: int __thiscall COutputMemFile::Create(unsigned int);
public: int __thiscall COutputMemFile::Create(unsigned char *,unsigned long);
protected: virtual int __thiscall CSound::Create(class CInputFile *,int,int);
public: void __thiscall cSurface::Create(int,int,class cSurface *);
public: void __thiscall cSurface::Create(struct HDC__ *);
public: void __thiscall cSurface::Create(struct HWND__ *,int);
public: void __thiscall cSurface::CreateAlpha(void);
public: virtual int __thiscall CFilterImpl::CreateAnimation(class COutputFile *,int,int,int,int,int,int,int,unsigned char *,unsigned long);
public: int __thiscall CImageFilter::CreateAnimation(class COutputFile *,int,int,int,int,int,int,int,unsigned char *,unsigned long);
public: int __thiscall CImageFilter::CreateAnimation(char const *,int,int,int,int,int,int,int,unsigned char *,unsigned long);
public: class CSoundFilter * __thiscall CSoundFilterMgr::CreateFilter(class CInputFile *);
public: virtual void * __thiscall CFilterMgr::CreateFilterObject(int);
public: virtual void * __thiscall CFilterMgr::CreateFilterObject(unsigned long);
public: virtual void * __thiscall CFilterMgr::CreateFilterObject(class CInputFile *);
public: struct HICON__ * __thiscall cSurface::CreateIcon(int,int,unsigned long,struct tagPOINT *);
public: unsigned long __thiscall cSurface::CreateMask(struct sMask *,unsigned int);
public: int __thiscall cSurface::CreateRotatedSurface(class cSurface &,int,int,unsigned long,int);
public: int __thiscall cSurface::CreateRotatedSurface(class cSurface &,double,int,unsigned long,int);
public: int __thiscall cSurface::CreateScreenSurface(void);
public: class CSound * __thiscall CSoundManager::CreateSound(class CInputFile *,int,int);
public: class CSoundManager * __thiscall CSoundFilterMgr::CreateSoundManager(struct HWND__ *);
void __stdcall csPalette_AddRef(struct csPalette *);
int __stdcall csPalette_GetNearColorIndex_Fast(struct csPalette *,unsigned long);
struct HPALETTE__ * __stdcall csPalette_GetPaletteHandle(struct csPalette *);
int __stdcall csPalette_InitCache(struct csPalette *);
void __stdcall csPalette_SubRef(struct csPalette *);
int __stdcall CTA_ExtendSize(void * * &,int &,int &,int);
int __stdcall CTA_ReduceSize(void * * &,int &,int &,int);
void __stdcall CTA_RemoveAt(void * * &,int &,int &,int);
public: virtual void __thiscall CInputFile::Delete(void);
public: void __thiscall CSound::Delete(void);
public: virtual void __thiscall CSoundManager::Delete(void);
public: void __thiscall cSurface::Delete(void);
public: void __thiscall CPArray::DeleteAt(int,int);
public: virtual void * __thiscall CInputBufFile::Detach(void);
public: virtual void * __thiscall CInputMemFile::Detach(void);
public: unsigned char * __thiscall cSurface::DetachAlpha(long *);
public: unsigned char * __thiscall COutputMemFile::DetachBuffer(void);
public: int __thiscall CImageFilterMgr::DoesFilterSupportAnimations(int);
public: int __thiscall CImageFilterMgr::DoesFilterSupportImages(int);
public: virtual int __thiscall CFilterImpl::DoesSupportAnimations(void);
public: virtual int __thiscall CFilterImpl::DoesSupportImages(void);
public: int __thiscall cSurface::DrawTextA(char const *,unsigned long,struct tagRECT *,unsigned long,unsigned long,struct HFONT__ *,enum BlitMode,enum BlitOp,long,int,unsigned long,unsigned long,unsigned long);
public: int __thiscall cSurface::Ellipse(int,int,int,int,int,unsigned long);
public: int __thiscall cSurface::Ellipse(int,int,int,int,int,class CFillData *,int,enum BlitMode,enum BlitOp,long);
public: int __thiscall cSurface::Ellipse(int,int,int,int,unsigned long,int,unsigned long,int);
public: int __thiscall cSurface::Ellipse(int,int,int,int,class CFillData *,int,class CFillData *,int,enum BlitMode,enum BlitOp,long,int);
public: int __thiscall cSurface::Ellipse(int,int,int,int,class CFillData *,int,enum BlitMode,enum BlitOp,long);
public: int __thiscall cSurface::EndRendering(void);
public: void __thiscall cSurface::EnumScreenModes(int (__stdcall*)(struct DisplayMode *,void *),void *);
void __stdcall File_Close(int);
int __stdcall File_CreateA(char const *);
int __stdcall File_ExistA(char const *);
long __stdcall File_GetLength(int);
unsigned long __stdcall File_GetPosition(int);
int __stdcall File_OpenA(char const *,int);
int __stdcall File_Read(int,void *,unsigned long);
int __stdcall File_ReadAndCount(int,void *,unsigned long);
int __stdcall File_ReadLongIntelData(int,void * *);
int __stdcall File_ReadShortIntelData(int,void * *);
int __stdcall File_ReadShortIntelString(int,void * *);
unsigned long __stdcall File_SeekBegin(int,long);
unsigned long __stdcall File_SeekCurrent(int,long);
unsigned long __stdcall File_SeekEnd(int,long);
int __stdcall File_Write(int,void *,unsigned long);
public: virtual int __thiscall CFillData::Fill(class cSurface *,int,int,int);
public: virtual int __thiscall CFillDir::Fill(class cSurface *,int,int,int);
public: virtual int __thiscall CFillDir::Fill(class cSurface *,int,int,int,int,int);
public: virtual int __thiscall CFillFlat::Fill(class cSurface *,int,int,int,int,int);
public: virtual int __thiscall CFillMosaic::Fill(class cSurface *,int,int,int,int,int);
public: int __thiscall cSurface::Fill(int);
public: int __thiscall cSurface::Fill(int,int,int);
public: int __thiscall cSurface::Fill(int,int,int,int,int);
public: int __thiscall cSurface::Fill(int,int,int,int,int,int,int);
public: int __thiscall cSurface::Fill(int,int,int,int,unsigned long);
public: int __thiscall cSurface::Fill(int,int,int,int,class CFillData *);
public: int __thiscall cSurface::Fill(unsigned long);
public: int __thiscall cSurface::Fill(class CFillData *);
public: int __thiscall cSurface::FilterBlit(class cSurface &,int,int,int,int,int,int,enum BlitMode,unsigned long (__stdcall*)(unsigned long,unsigned long,unsigned long),long)const ;
public: int __thiscall cSurface::FilterBlit(class cSurface &,unsigned long (__stdcall*)(unsigned long,unsigned long,unsigned long),long,enum BlitMode)const ;
public: void * __thiscall CPList::Find(void *);
public: void __thiscall cSurface::SetCurrentDevice(void);
public: int __thiscall cSurface::FloodFill(int,int,int &,int &,int &,int &,unsigned long,int,int,enum BlitMode,enum BlitOp,long);
public: int __thiscall cSurface::FloodFill(int,int,unsigned long,int,int,enum BlitMode,enum BlitOp,long);
public: virtual int __thiscall COutputBufFile::Flush(void);
public: virtual int __thiscall COutputMemFile::Flush(void);
public: virtual void __thiscall CFilterMgr::Free(void);
public: virtual void __thiscall CImageFilterMgr::Free(void);
public: virtual void __thiscall CSoundFilterMgr::Free(void);
public: virtual void __thiscall CInputFile::FreeBuffer(unsigned char *);
public: virtual void __thiscall CInputMemFile::FreeBuffer(unsigned char *);
public: static void __cdecl COutputMemFile::FreeBuffer(unsigned char *);
public: static void __cdecl cSurface::FreeSurfaces(void);
public: int __thiscall cSurface::GetAlphaPitch(void);
public: virtual unsigned long __thiscall CFilterImpl::GetAnimDuration(void);
public: unsigned long __thiscall CImageFilter::GetAnimDuration(void);
public: unsigned long * __thiscall CDWArray::GetArrayPtr(void);
public: void * * __thiscall CPArray::GetArrayPtr(void);
public: unsigned long __thiscall CDWArray::GetAt(int);
public: void * __thiscall CPArray::GetAt(int);
public: void * __thiscall CPList::GetAt(void *);
public: unsigned long __thiscall CDWArray::GetAt_Fast(int);
public: void * __thiscall CPArray::GetAt_Fast(int);
public: virtual unsigned char * __thiscall CInputFile::GetBuffer(unsigned int);
public: virtual unsigned char * __thiscall CInputMemFile::GetBuffer(unsigned int);
public: unsigned char * __thiscall COutputMemFile::GetBuffer(void);
public: unsigned long __thiscall CSound::GetBufferSize(void);
public: void __thiscall cSurface::GetClipRect(int &,int &,int &,int &);
public: unsigned long __thiscall CFillFlat::GetColor(void);
public: int __thiscall CPArray::GetCount(void);
public: virtual int __thiscall CFilterImpl::GetCurrentFrame(void);
public: int __thiscall CImageFilter::GetCurrentFrame(void);
public: unsigned long __thiscall CImageFilter::GetCurrentSaveAnimSize(void);
public: virtual unsigned long __thiscall CFilterImpl::GetDataSize(void);
public: unsigned long __thiscall CImageFilter::GetDataSize(void);
public: struct HDC__ * __thiscall cSurface::GetDC(void);
public: virtual int __thiscall CFilterImpl::GetDepth(void);
public: int __thiscall CImageFilter::GetDepth(void);
public: int __thiscall cSurface::GetDepth(void)const ;
unsigned char * __stdcall GetDIBBitmap(struct tagBITMAPINFO *);
unsigned long __stdcall GetDIBHeaderSize(int);
unsigned long __stdcall GetDIBSize(int,int,int);
public: unsigned long __thiscall cSurface::GetDIBSize(void);
unsigned long __stdcall GetDIBWidthBytes(int,int);
public: int __thiscall cSurface::GetDriver(void);
public: unsigned long __thiscall cSurface::GetDriverInfo(void *);
public: unsigned long __thiscall CSound::GetDuration(void);
public: virtual char * __thiscall CInputBufFile::GetFileNameA(void);
public: virtual char * __thiscall CInputMemFile::GetFileNameA(void);
public: virtual char * __thiscall COutputBufFile::GetFileNameA(void);
public: virtual char * __thiscall COutputMemFile::GetFileNameA(void);
public: virtual unsigned long __thiscall CFilterImpl::GetFilterColorCaps(void);
public: unsigned long __thiscall CImageFilter::GetFilterColorCaps(void);
public: virtual int __thiscall CFilterMgr::GetFilterCount(void);
public: virtual char const * * __thiscall CFilterMgr::GetFilterDependenciesA(int);
public: virtual char const * * __thiscall CFilterMgr::GetFilterExtsA(int);
public: virtual char const * __thiscall CFilterMgr::GetFilterFileNameA(int);
public: virtual unsigned long __thiscall CFilterMgr::GetFilterID(int);
public: unsigned long __thiscall CImageFilter::GetFilterID(void);
public: virtual int __thiscall CFilterMgr::GetFilterIndex(unsigned long);
public: int __thiscall CImageFilter::GetFilterIndex(void);
public: class CSoundFilterMgr * __thiscall CSoundManager::GetFilterMgr(void);
public: virtual char const * __thiscall CFilterMgr::GetFilterNameA(int);
public: char const * __thiscall CImageFilter::GetFilterNameA(void);
public: void * __thiscall CSoundManager::GetFirstSoundHandle(void);
public: virtual int __thiscall CFilterImpl::GetFrameDelay(int);
public: int __thiscall CImageFilter::GetFrameDelay(int);
public: unsigned long __thiscall CSound::GetFrequency(void);
public: void * __thiscall CPList::GetHeadPosition(void);
public: virtual int __thiscall CFilterImpl::GetHeight(void);
public: int __thiscall CImageFilter::GetHeight(void);
public: int __thiscall cSurface::GetHeight(void)const ;
public: int __thiscall cSurface::GetInfo(int &,int &,int &)const ;
public: struct tWAVEFORMATEX * __thiscall CSoundFilter::GetInputFormat(void);
public: int __thiscall cSurface::GetLastError(void);
public: virtual long __thiscall CInputBufFile::GetLength(void);
public: virtual long __thiscall CInputMemFile::GetLength(void);
public: virtual unsigned long __thiscall COutputBufFile::GetLength(void);
public: virtual unsigned long __thiscall COutputMemFile::GetLength(void);
public: virtual int __thiscall CFilterImpl::GetLoopCount(void);
public: int __thiscall CImageFilter::GetLoopCount(void);
public: unsigned long __thiscall CSound::GetLoopCount(void);
public: virtual int __thiscall CFilterImpl::GetLoopFrame(void);
public: int __thiscall CImageFilter::GetLoopFrame(void);
public: static unsigned int __cdecl CPArray::GetMaxSize(void);
public: int __thiscall cSurface::GetMinimizeRect(struct tagRECT *);
public: int __thiscall cSurface::GetNearestColorIndex(unsigned long);
public: void * __thiscall CPList::GetNext(void * &);
public: class CSound * __thiscall CSoundManager::GetNextSound(void *);
public: virtual int __thiscall CFilterImpl::GetNumberOfFrames(void);
public: int __thiscall CImageFilter::GetNumberOfFrames(void);
public: int __thiscall cSurface::GetOpaqueBlackIndex(void);
public: void __thiscall cSurface::GetOrigin(int &,int &);
public: void __thiscall cSurface::GetOrigin(struct tagPOINT &);
public: struct tWAVEFORMATEX * __thiscall CSoundFilter::GetOutputFormat(void);
public: virtual struct tagLOGPALETTE * __thiscall CFilterImpl::GetPalette(void);
public: struct tagLOGPALETTE * __thiscall CImageFilter::GetPalette(void);
public: struct csPalette * __thiscall cSurface::GetPalette(void);
public: unsigned int __thiscall cSurface::GetPaletteEntries(struct tagPALETTEENTRY *,int,int);
public: unsigned long __thiscall CSound::GetPan(void);
public: virtual int __thiscall CFilterImpl::GetPitch(void);
public: int __thiscall CImageFilter::GetPitch(void);
public: int __thiscall cSurface::GetPitch(void)const ;
public: int __thiscall cSurface::GetPixel(int,int,unsigned char &,unsigned char &,unsigned char &)const ;
public: int __thiscall cSurface::GetPixel(int,int,int &)const ;
public: int __thiscall cSurface::GetPixel(int,int,unsigned long &)const ;
public: int __thiscall cSurface::GetPixelFast8(int,int);
public: unsigned long __thiscall cSurface::GetPixelFast(int,int);
public: unsigned long __thiscall CSound::GetPos(void);
public: virtual long __thiscall CInputBufFile::GetPosition(void);
public: virtual long __thiscall CInputMemFile::GetPosition(void);
public: virtual long __thiscall COutputBufFile::GetPosition(void);
public: virtual long __thiscall COutputMemFile::GetPosition(void);
public: void * __thiscall CPList::GetPrev(void * &);
public: unsigned long __thiscall cSurface::GetRGB(int);
public: int __thiscall CPList::GetSize(void);
public: static void __cdecl cSurface::GetSizeOfRotatedRect(int *,int *,float);
public: class CSoundAPI * __thiscall CSoundManager::GetSoundAPI(void);
public: unsigned long __thiscall CSoundManager::GetSoundCount(void);
class cSurfaceImplementation * __stdcall GetSurfaceImplementation(class cSurface &);
public: static unsigned long __cdecl cSurface::GetSysColor(int);
public: void * __thiscall CPList::GetTailPosition(void);
public: unsigned long __thiscall cSurface::GetTransparentColor(void);
public: int __thiscall cSurface::GetTransparentColorIndex(void);
public: int __thiscall cSurface::GetType(void);
public: virtual void __thiscall CFilterImpl::GetUpdateRect(struct tagRECT *);
public: void __thiscall CImageFilter::GetUpdateRect(struct tagRECT *);
public: void * __thiscall CSound::GetUserData(void);
public: virtual unsigned char * __thiscall CFilterImpl::GetUserInfo(void);
public: unsigned char * __thiscall CImageFilter::GetUserInfo(void);
public: virtual unsigned long __thiscall CFilterImpl::GetUserInfoSize(void);
public: unsigned long __thiscall CImageFilter::GetUserInfoSize(void);
public: unsigned long __thiscall CSound::GetVolume(void);
public: void __thiscall CSound::GetWaveFormat(struct tWAVEFORMATEX *);
public: virtual int __thiscall CFilterImpl::GetWidth(void);
public: int __thiscall CImageFilter::GetWidth(void);
public: int __thiscall cSurface::GetWidth(void)const ;
public: int __thiscall CImageFilter::GoToImage(unsigned char *,int,int);
public: int __thiscall cSurface::HasAlpha(void);
public: int __thiscall cSurface::Indexed(void);
public: virtual void __thiscall CFilterImpl::Initialize(unsigned char *,unsigned long);
public: virtual void __thiscall CFilterMgr::Initialize(char const *,char const *,unsigned long);
public: void __thiscall CImageFilterMgr::Initialize(char const *,unsigned long);
public: void __thiscall CSoundFilterMgr::Initialize(char const *,unsigned long);
public: virtual int __thiscall CSoundManager::Initialize(struct HWND__ *);
public: static void __cdecl cSurface::InitializeSurfaces(void);
protected: virtual int __thiscall CSound::InitWaveFormat(struct tWAVEFORMATEX *,unsigned long,int);
public: void * __thiscall CPList::InsertAfter(void *,void *);
public: int __thiscall CDWArray::InsertAt(int,unsigned long,int);
public: int __thiscall CPArray::InsertAt(int,void *,int);
public: void * __thiscall CPList::InsertBefore(void *,void *);
public: virtual int __thiscall CFilterImpl::IsAnimation(void);
public: int __thiscall CImageFilter::IsAnimation(void);
public: int __thiscall CSoundManager::IsAnySound(void);
public: int __thiscall CSoundManager::IsAnySoundPlaying(void);
public: int __thiscall cSurface::IsColliding(class cSurface &,int,int,int,int,int,int);
public: int __thiscall CSound::IsCompleted(void);
public: int __thiscall CSound::IsLooping(void);
public: int __thiscall CSound::IsPaused(void);
public: int __thiscall cSurface::IsScreenSurface(void);
public: int __thiscall cSurface::IsTransparent(void);
public: int __thiscall cSurface::IsValid(void);
public: int __thiscall cSurface::Line(int,int,int,int,int,unsigned long);
public: int __thiscall cSurface::Line(int,int,int,int,int,class CFillData *,int,enum BlitMode,enum BlitOp,long);
public: int __thiscall CImageFilter::Load(unsigned char *,int,int,int,int,struct tagLOGPALETTE *,unsigned char *,int);
private: int __thiscall cSurface::LoadDIB(struct tagBITMAPINFO *,unsigned char *,enum LIFlags);
public: int __thiscall cSurface::LoadImageA(int,unsigned long,enum LIFlags);
public: int __thiscall cSurface::LoadImageA(struct HINSTANCE__ *,int,enum LIFlags);
public: int __thiscall cSurface::LoadImageA(struct tagBITMAPINFO *,unsigned char *,enum LIFlags);
public: int __thiscall cSurface::LoadImageA(char const *,enum LIFlags);
public: unsigned char * __thiscall cSurface::LockAlpha(void);
public: unsigned char * __thiscall cSurface::LockBuffer(void);
int __stdcall m_alloc(unsigned long,void * *);
private: static int cSurface::m_bSysColorTab;
int __stdcall m_calloc(unsigned long,void * *);
void __stdcall m_free(void * *);
void __stdcall m_heapmin(void);
void __stdcall m_lockheap(void);
int __stdcall m_realloc(unsigned long,void * *);
unsigned long __stdcall m_size(void *);
private: static unsigned long * cSurface::m_sysColorTab;
void __stdcall m_unlockheap(void);
public: int __thiscall cSurface::MatrixFilterBlit(class cSurface &,int,int,int,int,int,int,int,int,int,int,unsigned long (__stdcall*)(unsigned long *,unsigned long *,unsigned long),long)const ;
public: int __thiscall cSurface::Minimize(struct tagRECT *);
public: int __thiscall cSurface::Minimize(void);
public: void __thiscall CPList::MoveAfter(void *,void *);
int __stdcall MyGetNearestColorIndex(struct tagLOGPALETTE *,int,int,int);
protected: int __thiscall CFilterImpl::NeedConversion(void);
public: static class CInputBufFile * __cdecl CInputBufFile::NewInstance(void);
public: static class CInputMemFile * __cdecl CInputMemFile::NewInstance(void);
public: void __thiscall cSurface::OffsetOrigin(int,int);
public: void __thiscall cSurface::OffsetOrigin(struct tagPOINT);
public: virtual void __thiscall CFilterImpl::OnCloseInputFile(class CInputFile *);
public: virtual void __thiscall CFilterImpl::OnCloseOutputFile(class COutputFile *);
public: void __thiscall CSoundManager::OnStopSoundTimer(void);
public: static void __cdecl cSurface::OnSysColorChange(void);
public: int __thiscall CImageFilter::Open(class CInputFile *);
public: int __thiscall CImageFilter::Open(char const *);
public: void __thiscall CSoundManager::PauseSounds(void);
public: void __thiscall CSoundManager::PlaySounds(void);
public: int __thiscall cSurface::Polygon(struct tagPOINT *,int,int,unsigned long);
public: int __thiscall cSurface::Polygon(struct tagPOINT *,int,int,class CFillData *,int,enum BlitMode,enum BlitOp,long);
public: int __thiscall cSurface::Polygon(struct tagPOINT *,int,unsigned long,int,unsigned long,int);
public: int __thiscall cSurface::Polygon(struct tagPOINT *,int,class CFillData *,int,class CFillData *,int,enum BlitMode,enum BlitOp,long,int);
public: int __thiscall cSurface::Polygon(struct tagPOINT *,int,class CFillData *,int,enum BlitMode,enum BlitOp,long);
protected: int __thiscall CFilterImpl::PrepareConversion(void);
public: int __thiscall CImageFilter::PrepareLoading(int,int,int,struct tagLOGPALETTE *);
protected: int __thiscall CFilterImpl::PrepareRemapTable(void);
public: virtual int __thiscall CInputBufFile::Read(unsigned char *,unsigned long);
public: virtual int __thiscall CInputBufFile::Read(unsigned char *,unsigned long,unsigned long *);
public: virtual int __thiscall CInputMemFile::Read(unsigned char *,unsigned long);
public: virtual int __thiscall CInputMemFile::Read(unsigned char *,unsigned long,unsigned long *);
public: int __thiscall CSoundFilter::Read(unsigned char *,unsigned long,unsigned long *);
public: virtual int __thiscall CInputBufFile::ReadByte(unsigned char *);
public: virtual int __thiscall CInputMemFile::ReadByte(unsigned char *);
protected: int __thiscall CImageFilter::ReadHeader(void);
public: virtual int __thiscall CInputFile::ReadIntelDWord(unsigned long *);
public: virtual int __thiscall CInputFile::ReadIntelDWordArray(unsigned long *,int);
public: virtual int __thiscall CInputFile::ReadIntelFloat(float *);
public: virtual int __thiscall CInputFile::ReadIntelFloatArray(float *,int);
public: virtual int __thiscall CInputFile::ReadIntelWord(unsigned short *);
public: virtual int __thiscall CInputFile::ReadIntelWordArray(unsigned short *,int);
public: virtual int __thiscall CInputFile::ReadMacDWord(unsigned long *);
public: virtual int __thiscall CInputFile::ReadMacDWordArray(unsigned long *,int);
public: virtual int __thiscall CInputFile::ReadMacFloat(float *);
public: virtual int __thiscall CInputFile::ReadMacFloatArray(float *,int);
public: virtual int __thiscall CInputFile::ReadMacWord(unsigned short *);
public: virtual int __thiscall CInputFile::ReadMacWordArray(unsigned short *,int);
public: int __thiscall cSurface::Rectangle(int,int,int,int,int,unsigned long);
public: int __thiscall cSurface::Rectangle(int,int,int,int,int,class CFillData *,int,enum BlitMode,enum BlitOp,long);
public: int __thiscall cSurface::Rectangle(int,int,int,int,unsigned long,int,unsigned long,int);
public: int __thiscall cSurface::Rectangle(int,int,int,int,class CFillData *,int,class CFillData *,int,enum BlitMode,enum BlitOp,long,int);
public: int __thiscall cSurface::Rectangle(int,int,int,int,class CFillData *,int,enum BlitMode,enum BlitOp,long);
public: void __thiscall cSurface::ReleaseDC(struct HDC__ *);
public: void __thiscall cSurface::Remap(class cSurface &);
public: void __thiscall cSurface::Remap(unsigned char *);
public: void __thiscall CPArray::RemoveAll(void);
public: void __thiscall CPList::RemoveAll(void);
public: void __thiscall CPArray::RemoveAt(int);
public: void __thiscall CPList::RemoveAt(void *);
public: virtual void __thiscall CFilterMgr::RemoveFilter(int);
public: virtual void __thiscall CSoundManager::RemoveSound(class CSound *);
public: int __thiscall cSurface::ReplaceColor(unsigned long,unsigned long);
public: virtual void __thiscall CFilterImpl::Restart(void);
public: void __thiscall CImageFilter::Restart(void);
protected: void __thiscall cSurface::RestoreDrawClip(struct HDC__ *,struct HRGN__ *);
public: void __thiscall cSurface::RestoreWindowedMode(struct HWND__ *);
public: void __thiscall CSoundManager::ResumeSounds(void);
public: int __thiscall cSurface::ReverseX(int,int,int,int);
public: int __thiscall cSurface::ReverseX(void);
public: int __thiscall cSurface::ReverseY(int,int,int,int);
public: int __thiscall cSurface::ReverseY(void);
public: int __thiscall cSurface::Rotate90(class cSurface &,int);
public: int __thiscall cSurface::Rotate(class cSurface &,int,int,unsigned long,int);
public: int __thiscall cSurface::Rotate(class cSurface &,double,int,unsigned long,int);
public: virtual int __thiscall CFilterImpl::Save(class COutputFile *,unsigned char *,int,int,int,int,struct tagLOGPALETTE *,unsigned char *,int);
public: int __thiscall CImageFilter::Save(char const *,unsigned char *,int,int,int,int,struct tagLOGPALETTE *,unsigned char *,int);
public: virtual int __thiscall CFilterImpl::SaveAnimationFrame(class COutputFile *,unsigned char *,unsigned char *,int,int,int,int,struct tagLOGPALETTE *,unsigned char *,unsigned char *,int,int,unsigned long);
public: int __thiscall CImageFilter::SaveAnimationFrame(unsigned char *,unsigned char *,int,int,int,int,struct tagLOGPALETTE *,unsigned char *,unsigned char *,int,int,unsigned long);
public: int __thiscall CImageFilter::SaveAnimationFrame(unsigned char *,int,int,int,int,struct tagLOGPALETTE *,unsigned char *,int,int,unsigned long);
public: int __thiscall cSurface::SaveImage(int,enum SIFlags);
public: int __thiscall cSurface::SaveImage(struct tagBITMAPINFO *,unsigned char *,enum SIFlags);
public: int __thiscall cSurface::SaveImage(char const *,enum SIFlags);
public: int __thiscall cSurface::Scroll(int,int,int,int,int,int);
public: virtual long __thiscall CInputBufFile::Seek(long,int);
public: virtual long __thiscall CInputMemFile::Seek(long,int);
public: virtual long __thiscall COutputBufFile::Seek(long,int);
public: virtual long __thiscall COutputMemFile::Seek(long,int);
public: void __thiscall cSurface::SetAlpha(unsigned char *,int);
public: void __thiscall CDWArray::SetAt(int,unsigned long);
public: void __thiscall CPArray::SetAt(int,void *);
public: void __thiscall CPList::SetAt(void *,void *);
public: int __thiscall CDWArray::SetAtGrow(int,unsigned long);
public: int __thiscall CPArray::SetAtGrow(int,void *);
public: void __thiscall CPList::SetBlockSize(int);
public: void __thiscall cSurface::SetClipRect(int,int,int,int);
public: void __thiscall CFillFlat::SetColor(unsigned long);
public: void __thiscall CFillDir::SetColors(unsigned long,unsigned long);
public: virtual void __thiscall CFilterImpl::SetCompressionLevel(int);
public: void __thiscall CImageFilter::SetCompressionLevel(int);
public: virtual int __thiscall CFilterImpl::SetDestinationFormat(int,struct tagLOGPALETTE *);
public: void __thiscall CFillDir::SetDir(int);
protected: struct HRGN__ * __thiscall cSurface::SetDrawClip(struct HDC__ *);
public: virtual unsigned long __thiscall CFillData::SetFillOrg(int,int);
public: virtual unsigned long __thiscall CFillDir::SetFillOrg(int,int);
public: virtual unsigned long __thiscall CFillMosaic::SetFillOrg(int,int);
public: void __thiscall CSound::SetLoop(int,unsigned long);
public: void __thiscall cSurface::SetOrigin(int,int);
public: void __thiscall cSurface::SetOrigin(struct tagPOINT);
public: virtual void __thiscall CSoundFilter::SetOutputFormat(struct tWAVEFORMATEX *);
public: int __thiscall cSurface::SetPalette(class cSurface &,enum SetPaletteAction);
public: int __thiscall cSurface::SetPalette(struct csPalette *,enum SetPaletteAction);
public: int __thiscall cSurface::SetPalette(struct HPALETTE__ *,enum SetPaletteAction);
public: int __thiscall cSurface::SetPalette(struct tagLOGPALETTE *,enum SetPaletteAction);
public: void __thiscall cSurface::SetPixel(int,int,unsigned char,unsigned char,unsigned char);
public: void __thiscall cSurface::SetPixel(int,int,int);
public: void __thiscall cSurface::SetPixel(int,int,unsigned long);
public: void __thiscall cSurface::SetPixelFast8(int,int,int);
public: void __thiscall cSurface::SetPixelFast(int,int,unsigned long);
public: void __thiscall CSound::SetPos(unsigned long);
public: void __thiscall CImageFilter::SetProgressCallBack(int (__stdcall*)(int));
public: int __thiscall cSurface::SetScreenMode(struct HWND__ *,int,int,int);
void __stdcall SetSurfaceImplementation(class cSurface &,class cSurfaceImplementation *);
public: void __thiscall CFillMosaic::SetTile(class cSurface *);
public: void __thiscall cSurface::SetTransparentColor(unsigned long);
public: void __thiscall CSound::SetUserData(void *);
public: void __thiscall CSoundManager::StopSounds(int);
public: int __thiscall cSurface::Stretch(class cSurface &,int,int,int,int,int,int,int,int,enum BlitMode,enum BlitOp,long,unsigned long)const ;
public: int __thiscall cSurface::Stretch(class cSurface &,int,int,int,int,enum BlitMode,enum BlitOp,long,unsigned long)const ;
public: int __thiscall cSurface::Stretch(class cSurface &,unsigned long)const ;
public: int __thiscall cSurface::TextOutA(char const *,unsigned long,int,int,unsigned long,struct tagRECT *,unsigned long,struct HFONT__ *,enum BlitMode,enum BlitOp,long,int);
public: virtual void __thiscall CSoundManager::UnInitialize(void);
public: void __thiscall cSurface::UnlockAlpha(void);
public: void __thiscall cSurface::UnlockBuffer(unsigned char *);
int __stdcall UnzipBufToHFile(int,unsigned char *,unsigned long);
int __stdcall UnzipFile(class COutputFile *,class CInputFile *,unsigned long);
int __stdcall UnzipHFileToBuf(unsigned char *,int,unsigned long);
int __stdcall UnzipHFileToHFile(int,int,unsigned long);
public: int __thiscall cSurface::UpdateScreen(void);
public: void __thiscall CSoundManager::UpdateStreamBuffers(void);
public: int __thiscall CImageFilter::UseSpecificFilterID(unsigned long);
public: int __thiscall CImageFilter::UseSpecificFilterIndex(int);
protected: void __thiscall CFillData::VERIFY_BLACK(unsigned long &);
public: int __thiscall cSurface::WaitForVBlank(void);
public: virtual int __thiscall COutputBufFile::Write(unsigned char *,unsigned int);
public: virtual int __thiscall COutputMemFile::Write(unsigned char *,unsigned int);
public: int __thiscall COutputFile::WriteIntelDWord(unsigned long *);
public: int __thiscall COutputFile::WriteIntelFloat(float *);
public: int __thiscall COutputFile::WriteIntelWord(unsigned short *);
public: int __thiscall COutputFile::WriteMacDWord(unsigned long *);
public: int __thiscall COutputFile::WriteMacWord(unsigned short *);
int __stdcall ZipBufToHFile(int,unsigned char *,unsigned long,int);
int __stdcall ZipFile(class COutputFile *,class CInputFile *,unsigned long,int);
int __stdcall ZipHFileToHFile(int,int,unsigned long,int);
public: __thiscall COutputBufFile::COutputBufFile(class COutputBufFile const &);
public: __thiscall COutputBufFile::COutputBufFile(void);
public: int __thiscall CPArray::SetSize(int);
GetImageInfoEx;
PrepareSpriteColMask;
CompleteSpriteColMask;
ColMask_OrMask;
ColMask_OrPlatformMask;
public: int __thiscall CInputMemFile::Create(unsigned long);
public: unsigned char * __thiscall CInputMemFile::GetMemBuffer(void);
public: static class CFilterMgr * __cdecl CFilterMgr::CreateInstance(void);
public: static class CImageFilterMgr * __cdecl CImageFilterMgr::CreateInstance(void);
public: static class CSoundFilterMgr * __cdecl CSoundFilterMgr::CreateInstance(void);
public: virtual void __thiscall CFilterMgr::Delete(void);
GetSndChannelDuration;
GetSndChannelPan;
GetSndChannelPosition;
GetSndChannelVolume;
GetSndDuration;
GetSndMainPan;
GetSndMainVolume;
GetSndPan;
GetSndPosition;
GetSndVolume;
SetSndChannelPan;
SetSndChannelPosition;
SetSndChannelVolume;
SetSndMainPan;
SetSndMainVolume;
SetSndPan;
SetSndPosition;
SetSndVolume;
public: virtual int __thiscall CFilterImpl::GetTransparentColor(unsigned long *);
public: int __thiscall CImageFilter::GetTransparentColor(unsigned long *);
public: virtual unsigned long __thiscall CFilterImpl::GetVersion(void);
GetAppCSPalette;
GetFirstSprite;
GetNextSprite;
GetPrevSprite;
GetLastSprite;
public: class cSurface * __thiscall cSurface::GetAlphaSurface(void);
public: void __thiscall cSurface::ReleaseAlphaSurface(class cSurface *);
GetSndChannel;
LockSndChannel;
SetSndChannelFreq;
SetSndFreq;
GetSndChannelFreq;
GetSndFreq;
void __stdcall WinSetCurrent(int);
WinSizeChanged;
public: __thiscall CEffectEx::CEffectEx(class CEffectEx const &);
public: __thiscall CEffectEx::CEffectEx(void);
public: __thiscall cSurfaceImplementation::cSurfaceImplementation(class cSurfaceImplementation const &);
public: __thiscall cSurfaceImplementation::cSurfaceImplementation(void);
public: virtual __thiscall CEffectEx::~CEffectEx(void);
public: virtual __thiscall cSurfaceImplementation::~cSurfaceImplementation(void);
public: class CEffectEx & __thiscall CEffectEx::operator=(class CEffectEx const &);
public: class cSurfaceImplementation & __thiscall cSurfaceImplementation::operator=(class cSurfaceImplementation const &);
const CEffectEx::`vftable';
const cSurfaceImplementation::`vftable';
public: void __thiscall cSurfaceImplementation::AttachAlpha(unsigned char *,int);
public: virtual int __thiscall cSurfaceImplementation::AttachWindow(struct HWND__ *);
public: virtual int __thiscall cSurfaceImplementation::BeginRaster(void);
public: virtual int __thiscall cSurfaceImplementation::BeginRendering(int,unsigned long);
public: virtual int __thiscall cSurfaceImplementation::Blit(int,int,struct HDC__ *,int,int,int,int,enum BlitMode,enum BlitOp,unsigned long);
public: virtual int __thiscall cSurfaceImplementation::Blit(class cSurfaceImplementation *,int,int,int,int,int,int,enum BlitMode,enum BlitOp,unsigned long,unsigned long);
public: int __thiscall cSurface::BlitEx(class cSurface &,float,float,float,float,int,int,int,int,struct tagPOINT *,float,enum BlitMode,enum BlitOp,long,unsigned long)const ;
public: virtual int __thiscall cSurfaceImplementation::BlitEx(class cSurfaceImplementation *,float,float,float,float,int,int,int,int,struct tagPOINT *,float,enum BlitMode,enum BlitOp,long,unsigned long);
public: virtual int __thiscall cSurfaceImplementation::BlitExFromMemSurface(class cSurfaceImplementation *,float,float,float,float,int,int,int,int,struct tagPOINT *,float,enum BlitMode,enum BlitOp,long,unsigned long);
public: virtual int __thiscall cSurfaceImplementation::BlitFrom(class cSurfaceImplementation *,int,int,int,int,int,int,enum BlitMode,enum BlitOp,unsigned long,unsigned long);
public: virtual int __thiscall cSurfaceImplementation::CanDrawShapes(void);
public: virtual void __thiscall cSurfaceImplementation::ClearClipRect(void);
protected: int __thiscall cSurfaceImplementation::Clone(class cSurfaceImplementation const *,int,int,long);
protected: int __thiscall cSurfaceImplementation::Convert(class cSurfaceImplementation *,int,int,int,int,int,int,enum BlitMode,enum BlitOp,unsigned long,unsigned long);
public: virtual void __thiscall cSurfaceImplementation::CopyScreenModeInfo(class cSurfaceImplementation *);
public: void __thiscall cSurfaceImplementation::CreateAlpha(void);
public: virtual int __thiscall CEffectEx::CreateCompiledEffect(class cSurface *);
public: virtual void __thiscall cSurfaceImplementation::CreateEffect(class CEffectEx *);
public: virtual unsigned long __thiscall cSurfaceImplementation::CreateMask(struct sMask *,unsigned int);
public: virtual class cSurfaceImplementation * __thiscall cSurfaceImplementation::CreateScreenSurface(void);
public: virtual int __thiscall cSurfaceImplementation::DCOrigin(void);
public: virtual void __thiscall cSurfaceImplementation::Delete(void);
public: void __thiscall cSurfaceImplementation::DeleteAlpha(void);
void __stdcall DeleteEffect(class CEffectEx *);
public: unsigned char * __thiscall cSurfaceImplementation::DetachAlpha(long *);
public: virtual int __thiscall cSurfaceImplementation::Draw_Text(char const *,unsigned long,struct tagRECT *,unsigned long,unsigned long,struct HFONT__ *,enum BlitMode,enum BlitOp,unsigned long,int,unsigned long,unsigned long,unsigned long);
public: virtual void __thiscall cSurfaceImplementation::EndRaster(void);
public: virtual int __thiscall cSurfaceImplementation::EndRendering(void);
public: virtual void __thiscall cSurfaceImplementation::EnumScreenModes(int (__stdcall*)(struct DisplayMode *,void *),void *);
public: virtual int __thiscall cSurfaceImplementation::Fill(int,int,int,int,int);
public: virtual int __thiscall cSurfaceImplementation::Fill(int,int,int,int,unsigned long);
public: virtual int __thiscall cSurfaceImplementation::FilterBlit(class cSurfaceImplementation *,int,int,int,int,int,int,enum BlitMode,unsigned long (__stdcall*)(unsigned long,unsigned long,unsigned long),unsigned long);
public: int __thiscall cSurfaceImplementation::GetAlphaPitch(void);
public: int __thiscall cSurface::SetAutoVSync(int);
public: virtual void __thiscall cSurfaceImplementation::GetClipRect(int &,int &,int &,int &);
public: virtual void * __thiscall CEffectEx::GetCompiledEffect(void);
public: virtual struct HDC__ * __thiscall cSurfaceImplementation::GetDC(void);
public: int __thiscall cSurfaceImplementation::GetDepth(void);
public: virtual unsigned long __thiscall cSurfaceImplementation::GetDriverInfo(void *);
public: virtual unsigned long __thiscall CEffectEx::GetFlags(void);
public: int __thiscall cSurfaceImplementation::GetHeight(void);
public: int __thiscall cSurfaceImplementation::GetInfos(int &,int &,int &);
protected: void __thiscall cSurfaceImplementation::GetMatrix(int,int,int,int,unsigned long *);
public: virtual int __thiscall cSurfaceImplementation::GetMinimizeRect(struct tagRECT *);
public: virtual int __thiscall cSurfaceImplementation::GetNearestColorIndex(unsigned long);
public: virtual int __thiscall cSurfaceImplementation::GetOpaqueBlackIndex(void);
public: virtual unsigned long __thiscall cSurfaceImplementation::GetOrigin(void);
public: virtual int __thiscall cSurfaceImplementation::GetPalette(struct tagLOGPALETTE *);
public: virtual struct csPalette * __thiscall cSurfaceImplementation::GetPalette(void);
public: virtual unsigned int __thiscall cSurfaceImplementation::GetPaletteEntries(struct tagPALETTEENTRY *,int,int);
public: virtual float __thiscall CEffectEx::GetParamFloatValue(int);
public: virtual int __thiscall CEffectEx::GetParamIndex(char const *);
public: virtual int __thiscall CEffectEx::GetParamIntValue(int);
public: virtual int __thiscall CEffectEx::GetParamType(int);
public: unsigned long __thiscall cSurfaceImplementation::GetPitch(void);
public: virtual int __thiscall cSurfaceImplementation::GetPixel(int,int,int &);
public: virtual int __thiscall cSurfaceImplementation::GetPixel(int,int,unsigned long &);
public: unsigned long __thiscall cSurfaceImplementation::GetPixelFast(int,int);
public: int __thiscall cSurfaceImplementation::GetPixelIndexFast(int,int);
public: virtual unsigned long __thiscall cSurfaceImplementation::GetRGB(int);
public: virtual int __thiscall cSurfaceImplementation::SetAutoVSync(int);
public: virtual int __thiscall cSurfaceImplementation::GetScanLine(void);
protected: void __thiscall cSurfaceImplementation::GetTranspMatrix(int,int,int,int,unsigned long *);
public: virtual unsigned long __thiscall cSurfaceImplementation::GetTransparentColor(void);
public: virtual int __thiscall cSurfaceImplementation::GetTransparentColorIndex(void);
public: virtual int __thiscall cSurfaceImplementation::GetType(void);
public: int __thiscall cSurfaceImplementation::GetWidth(void);
public: int __thiscall cSurfaceImplementation::HasAlpha(void);
protected: static void __cdecl cSurfaceImplementation::HorizScale(class cSurfaceImplementation *,unsigned int,unsigned int,unsigned int,unsigned int,class cSurfaceImplementation *,unsigned int,unsigned int,int,unsigned long);
public: virtual void __thiscall cSurfaceImplementation::InitDepth(int);
public: virtual int __thiscall CEffectEx::Initialize(char const *,long,unsigned long,int,char const *,unsigned char *);
public: int __thiscall cSurfaceImplementation::IsColliding(class cSurfaceImplementation *,int,int,int,int,int,int);
public: virtual int __thiscall cSurfaceImplementation::IsCompressed(void);
public: int __thiscall cSurfaceImplementation::IsLocked(void);
public: virtual int __thiscall cSurfaceImplementation::IsOpaque(void);
public: virtual int __thiscall cSurfaceImplementation::IsPureDC(void);
public: virtual int __thiscall cSurfaceImplementation::IsScreenSurface(void);
public: virtual int __thiscall cSurfaceImplementation::IsTransparent(void);
public: virtual int __thiscall cSurfaceImplementation::Line(int,int,int,int,int,unsigned long);
public: virtual int __thiscall cSurfaceImplementation::LoadBits(int);
public: unsigned char * __thiscall cSurfaceImplementation::LockAlpha(void);
public: unsigned char * __thiscall cSurfaceImplementation::LockBuffer(void);
public: virtual int __thiscall cSurfaceImplementation::MakePrototype(int);
public: virtual int __thiscall cSurfaceImplementation::MatrixFilterBlit(class cSurfaceImplementation *,int,int,int,int,int,int,int,int,int,int,int,int,unsigned long (__stdcall*)(unsigned long *,unsigned long *,unsigned long),unsigned long);
class CEffectEx * __stdcall NewEffect(void);
public: virtual void __thiscall cSurfaceImplementation::OnWindowSizeChanged(void);
public: virtual void __thiscall CEffectEx::ReleaseCompiledEffect(class cSurface *);
public: virtual void __thiscall cSurfaceImplementation::ReleaseDC(struct HDC__ *);
public: virtual void __thiscall cSurfaceImplementation::ReleaseEffect(class CEffectEx *);
public: virtual void __thiscall cSurfaceImplementation::Remap(unsigned char *);
public: virtual void __thiscall cSurfaceImplementation::Remap(struct csPalette *);
public: virtual int __thiscall cSurfaceImplementation::ReplaceColor(unsigned long,unsigned long);
public: virtual int __thiscall cSurfaceImplementation::Resize(int,int);
public: virtual void __thiscall cSurfaceImplementation::RestoreWindowedMode(struct HWND__ *);
public: virtual int __thiscall cSurfaceImplementation::ReverseX(int,int,int,int);
public: virtual int __thiscall cSurfaceImplementation::ReverseY(int,int,int,int);
public: virtual int __thiscall cSurfaceImplementation::Rotate90(class cSurfaceImplementation *,int);
public: virtual int __thiscall cSurfaceImplementation::Rotate(class cSurfaceImplementation *,float,int,unsigned long,int);
public: virtual int __thiscall cSurfaceImplementation::SaveBits(int);
protected: static void __cdecl cSurfaceImplementation::Scale(class cSurfaceImplementation *,unsigned int,unsigned int,unsigned int,unsigned int,class cSurfaceImplementation *,unsigned int,unsigned int,int,unsigned long);
public: virtual int __thiscall cSurfaceImplementation::Scroll(int,int,int,int,int,int);
public: void __thiscall cSurfaceImplementation::SetAlpha(unsigned char *,int);
WinSetLayerEffect;
public: virtual void __thiscall cSurfaceImplementation::SetClipRect(int,int,int,int);
public: virtual void __thiscall cSurfaceImplementation::SetCurrentDevice(void);
public: virtual void __thiscall CEffectEx::SetFlags(unsigned long);
public: virtual void __thiscall cSurfaceImplementation::SetOrigin(int,int);
public: virtual int __thiscall cSurfaceImplementation::SetPalette(struct csPalette *,enum SetPaletteAction);
public: virtual int __thiscall cSurfaceImplementation::SetPalette(struct tagLOGPALETTE *,enum SetPaletteAction);
public: virtual int __thiscall cSurfaceImplementation::SetPalette(class cSurfaceImplementation *,enum SetPaletteAction);
public: virtual void __thiscall CEffectEx::SetParamFloatValue(int,float);
public: virtual void __thiscall CEffectEx::SetParamIntValue(int,int);
public: virtual void __thiscall cSurfaceImplementation::SetPixel(int,int,int);
public: virtual void __thiscall cSurfaceImplementation::SetPixel(int,int,unsigned long);
public: void __thiscall cSurfaceImplementation::SetPixelFast(int,int,unsigned long);
public: void __thiscall cSurfaceImplementation::SetPixelIndexFast(int,int,int);
WinCreateLayers;
public: virtual int __thiscall cSurfaceImplementation::SetScreenMode(struct HWND__ *,int,int,int);
public: virtual int __thiscall cSurfaceImplementation::SetTexture(class cSurfaceImplementation *);
public: virtual void __thiscall cSurfaceImplementation::SetTransparentColor(unsigned long);
public: virtual int __thiscall cSurfaceImplementation::Stretch(int,int,int,int,struct HDC__ *,int,int,int,int,enum BlitMode,enum BlitOp,unsigned long);
public: virtual int __thiscall cSurfaceImplementation::Stretch(class cSurfaceImplementation *,int,int,int,int,int,int,int,int,enum BlitMode,enum BlitOp,unsigned long,unsigned long);
public: virtual int __thiscall cSurfaceImplementation::StretchFromMemSurface(class cSurfaceImplementation *,int,int,int,int,int,int,int,int,enum BlitMode,enum BlitOp,unsigned long,unsigned long);
public: virtual int __thiscall cSurfaceImplementation::Text_Out(char const *,unsigned long,int,int,unsigned long,struct tagRECT *,unsigned long,struct HFONT__ *,enum BlitMode,enum BlitOp,unsigned long,int);
public: void __thiscall cSurfaceImplementation::UnlockAlpha(void);
public: void __thiscall cSurfaceImplementation::UnlockBuffer(unsigned char *);
public: virtual int __thiscall cSurfaceImplementation::UpdateScreen(void);
protected: static void __cdecl cSurfaceImplementation::VertScale(class cSurfaceImplementation *,unsigned int,unsigned int,unsigned int,unsigned int,class cSurfaceImplementation *,unsigned int,unsigned int,int,unsigned long);
public: virtual int __thiscall cSurfaceImplementation::WaitForVBlank(void);
public: int __thiscall cSurface::Fill(int,int,int,int,unsigned long *,unsigned long);
public: virtual int __thiscall cSurfaceImplementation::Fill(int,int,int,int,unsigned long *,unsigned long);
public: virtual unsigned long __thiscall CEffectEx::GetRGBA(void);
public: virtual void __thiscall CEffectEx::SetRGBA(unsigned long);
public: virtual int __thiscall CEffectEx::GetBackgroundTexture(void);
public: virtual void __thiscall cSurfaceImplementation::SetOpaque(int);
public: virtual void __thiscall cSurfaceImplementation::UpdateEffectParam(class CEffectEx *,unsigned int);
GetSpriteRectNew;
DelImageTexture;
class cSurfaceImplementation * __cdecl GetImageTextureSurface(void *,unsigned long);
public: void __thiscall cSurface::AddLostDeviceCallBack(void (__stdcall*)(class cSurface *,long),long);
public: virtual void __thiscall cSurfaceImplementation::AddLostDeviceCallBack(void (__stdcall*)(class cSurface *,long),class cSurface *,long);
public: static void __cdecl cSurface::FreeExternalModules(void);
public: virtual int __thiscall CEffectEx::GetNParams(void);
public: virtual class cSurfaceImplementation * __thiscall CEffectEx::GetParamSurfaceValue(int);
public: virtual class cSurfaceImplementation * __thiscall cSurfaceImplementation::GetScreenSurface(void);
float __stdcall GetSpriteAngleNew(class Win *,class Spr *,int *);
struct sMask * __stdcall GetSpriteMaskNew(class Win *,class Spr *,unsigned int,unsigned int);
void __stdcall GetSpriteScaleNew(class Win *,class Spr *,float *,float *,int *);
public: virtual long __thiscall CEffectEx::GetUserParam(void);
public: virtual int __thiscall cSurfaceImplementation::HasBlitFrom(void);
public: virtual int __thiscall cSurfaceImplementation::HasStretchFrom(void);
public: virtual int __thiscall CEffectEx::IsEffectValid(class cSurface *,char *,int);
public: virtual int __thiscall cSurfaceImplementation::IsEffectValid(class CEffectEx *,char *,int);
int __stdcall Mask_TestRotatedMask(unsigned char *,unsigned char *,int,int,int,int,int,int,int,int,int,int,float,int);
int __stdcall Mask_TestScaledMask(unsigned char *,unsigned char *,int,int,int,int,int,int,int,int,float,float);
int __stdcall Mask_TestScaledRotatedMask(unsigned char *,unsigned char *,int,int,int,int,int,int,int,int,int,int,float,float,float,int);
int __stdcall Mask_TestScaledRotatedRect(unsigned char *,int,int,int,int,int,int,int,int,int,int,float,float,float,int);
public: void __thiscall cSurface::OnLostDevice(void);
public: virtual void __thiscall cSurfaceImplementation::OnLostDevice(void);
public: virtual void __thiscall cSurfaceImplementation::ReleaseScreenSurface(void);
public: void __thiscall cSurface::RemoveLostDeviceCallBack(void (__stdcall*)(class cSurface *,long),long);
public: virtual void __thiscall cSurfaceImplementation::RemoveLostDeviceCallBack(void (__stdcall*)(class cSurface *,long),class cSurface *,long);
public: virtual void __thiscall cSurfaceImplementation::ResetDevice(void);
public: virtual void __thiscall CEffectEx::SetBackgroundTexture(int);
public: virtual void __thiscall CEffectEx::SetParamSurfaceValue(int,class cSurfaceImplementation *);
int __cdecl GetCollisionRect(struct tagRECT *,struct tagPOINT *,struct DRECTEX *,struct DRECTEX *);
int __cdecl GetCollisionRect2(struct tagRECT *,struct tagPOINT *,struct DRECTEX *,struct DRECTEX *);
void __cdecl RotateRect(struct tagRECT *,struct tagPOINT *,struct tagPOINT *,float);
int __stdcall Rect_TestSMaskEx(struct tagRECT *,struct sMask *,int,int,float,float,float);
public: void __thiscall cSurface::Flush(int);
public: virtual void __thiscall cSurfaceImplementation::Flush(int);
public: class cSurface * __thiscall cSurface::GetRenderTargetSurface(void);
public: virtual class cSurfaceImplementation * __thiscall cSurfaceImplementation::GetRenderTargetSurface(void);
public: void __thiscall cSurface::ReleaseRenderTargetSurface(class cSurface *);
public: void __thiscall cSurface::SetZBuffer(float);
public: virtual void __thiscall cSurfaceImplementation::SetZBuffer(float);
int __stdcall BeginAnimationExportW(class CImageFilterMgr *,unsigned short const *,class cSurface *,class CImageFilter *,int,int,int,int);
int __stdcall BeginAnimationImportW(class CImageFilterMgr *,unsigned short const *,class cSurface *,class CImageFilter *,unsigned long);
int __stdcall CanImportAnimationW(class CImageFilterMgr *,unsigned short const *,int *);
int __stdcall CanImportImageW(class CImageFilterMgr *,unsigned short const *);
int __stdcall ChoosePictureW(struct tagOFNW *,int,class CImageFilterMgr *,unsigned long *,unsigned long);
public: int __thiscall CInputBufFile::Create(unsigned short const *);
public: int __thiscall CInputBufFile::Create(unsigned short const *,unsigned long,unsigned long);
public: int __thiscall COutputBufFile::Create(unsigned short const *,unsigned int);
public: int __thiscall CImageFilter::CreateAnimation(unsigned short const *,int,int,int,int,int,int,int,unsigned char *,unsigned long);
struct HFONT__ * __stdcall CreateFontIndirectU(struct tagLOGFONTW const *);
public: int __thiscall cSurface::DrawTextW(unsigned short const *,unsigned long,struct tagRECT *,unsigned long,unsigned long,struct HFONT__ *,enum BlitMode,enum BlitOp,long,int,unsigned long,unsigned long,unsigned long);
int __stdcall ExportImageW(class CImageFilterMgr *,unsigned short const *,class cSurface *,unsigned long);
int __stdcall File_CreateW(unsigned short const *);
int __stdcall File_ExistW(unsigned short const *);
int __stdcall File_OpenW(unsigned short const *,int);
void * __stdcall FindFirstFileU(unsigned short const *,struct _WIN32_FIND_DATAW *);
int __stdcall FindNextFileU(void *,struct _WIN32_FIND_DATAW *);
void __stdcall FreeStr(void *);
void __stdcall FreeUnicodeAPI(void);
int __stdcall GetCodePage(void);
public: virtual unsigned short * __thiscall CInputBufFile::GetFileNameW(void);
public: virtual unsigned short * __thiscall CInputMemFile::GetFileNameW(void);
public: virtual unsigned short * __thiscall COutputBufFile::GetFileNameW(void);
public: virtual unsigned short * __thiscall COutputMemFile::GetFileNameW(void);
public: virtual unsigned short const * * __thiscall CFilterMgr::GetFilterDependenciesW(int);
public: virtual unsigned short const * * __thiscall CFilterMgr::GetFilterExtsW(int);
public: virtual unsigned short const * __thiscall CFilterMgr::GetFilterFileNameW(int);
public: virtual unsigned short const * __thiscall CFilterMgr::GetFilterNameW(int);
public: unsigned short const * __thiscall CImageFilter::GetFilterNameW(void);
char * __stdcall GetMBStr(unsigned short const *,unsigned int);
unsigned short * __stdcall GetUnicodeStr(char const *,unsigned int);
int __stdcall ImportImageW(class CImageFilterMgr *,unsigned short const *,class cSurface *,unsigned long *,unsigned long);
int __stdcall ImportPaletteW(class CImageFilterMgr *,unsigned short const *,struct tagLOGPALETTE *);
public: virtual void __thiscall CFilterMgr::Initialize(unsigned short const *,unsigned short const *,unsigned long);
public: void __thiscall CImageFilterMgr::Initialize(unsigned short const *,unsigned long);
public: void __thiscall CSoundFilterMgr::Initialize(unsigned short const *,unsigned long);
void __stdcall InitUnicodeAPI(void);
public: int __thiscall cSurface::LoadImageW(int,unsigned long,enum LIFlags);
public: int __thiscall cSurface::LoadImageW(struct HINSTANCE__ *,int,enum LIFlags);
public: int __thiscall cSurface::LoadImageW(struct tagBITMAPINFO *,unsigned char *,enum LIFlags);
public: int __thiscall cSurface::LoadImageW(unsigned short const *,enum LIFlags);
struct HINSTANCE__ * __stdcall LoadLibraryU(unsigned short const *);
int __stdcall LoadStringU(struct HINSTANCE__ *,unsigned int,unsigned short *,int);
void __stdcall LogFontAToLogFontW(struct tagLOGFONTW *,struct tagLOGFONTA const *);
void __stdcall LogFontWToLogFontA(struct tagLOGFONTA *,struct tagLOGFONTW const *);
public: int __thiscall CImageFilter::Open(unsigned short const *);
public: int __thiscall CImageFilter::Save(unsigned short const *,unsigned char *,int,int,int,int,struct tagLOGPALETTE *,unsigned char *,int);
public: int __thiscall cSurface::SaveImage(unsigned short const *,enum SIFlags);
int __stdcall SetCodePage(unsigned long);
AddFontW;
AddSoundW;
DefMsgProcW;
FindSndFromNameW;
GetFontInfosW;
GetSoundInfoW;
GetSoundNameW;
LogFont16To32W;
LogFont32To16W;
PlaySndW;
ReplaceSoundW;
SCRWinOpenW;
WinOpenExW;
WinPasteTextW;
public: int __thiscall cSurface::TextOutW(unsigned short const *,unsigned long,int,int,unsigned long,struct tagRECT *,unsigned long,struct HFONT__ *,enum BlitMode,enum BlitOp,long,int);
public: __thiscall CPTypeArray<class cSurface>::CPTypeArray<class cSurface>(void);
public: __thiscall CPTypeArray<class Spr>::~CPTypeArray<class Spr>(void);
public: __thiscall CPTypeArray<class cSurface>::~CPTypeArray<class cSurface>(void);
public: class CPTypeArray<class Spr> & __thiscall CPTypeArray<class Spr>::operator=(class CPTypeArray<class Spr> const &);
public: class CPTypeArray<class cSurface> & __thiscall CPTypeArray<class cSurface>::operator=(class CPTypeArray<class cSurface> const &);
public: int __thiscall CPTypeArray<class Spr>::Add(class Spr *);
public: void __thiscall CPTypeArray<class Spr>::DeleteAt(int,int);
public: virtual int __thiscall cSurfaceImplementation::Draw_Text(unsigned short const *,unsigned long,struct tagRECT *,unsigned long,unsigned long,struct HFONT__ *,enum BlitMode,enum BlitOp,unsigned long,int,unsigned long,unsigned long,unsigned long);
public: int __thiscall CPTypeArray<class Spr>::Find(class Spr *);
public: class Spr * __thiscall CPTypeArray<class Spr>::GetAt_Fast(int);
public: void __thiscall CPTypeArray<class Spr>::RemoveAll(void);
public: void __thiscall CPTypeArray<class Spr>::SetAt(int,class Spr *);
public: virtual int __thiscall cSurfaceImplementation::Text_Out(unsigned short const *,unsigned long,int,int,unsigned long,struct tagRECT *,unsigned long,struct HFONT__ *,enum BlitMode,enum BlitOp,unsigned long,int);
WinGetLayerAt;

